<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>greasemonkey | yewton.net</title><link>https://www.yewton.net/tags/greasemonkey/</link><atom:link href="https://www.yewton.net/tags/greasemonkey/index.xml" rel="self" type="application/rss+xml"/><description>greasemonkey</description><generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>ja-jp</language><copyright>© 2016-2020 yewton</copyright><lastBuildDate>Sat, 23 Jan 2016 23:47:43 +0900</lastBuildDate><image><url>https://www.yewton.net/img/icon.png</url><title>greasemonkey</title><link>https://www.yewton.net/tags/greasemonkey/</link></image><item><title>JIRA Agile用のuserscriptを作ったりした日</title><link>https://www.yewton.net/2016/01/23/diary/</link><pubDate>Sat, 23 Jan 2016 23:47:43 +0900</pubDate><guid>https://www.yewton.net/2016/01/23/diary/</guid><description>&lt;h2 id="heading">趣味の政策物&lt;/h2>
&lt;p>弊チームではバックログとしてJIRAを使っている。&lt;/p>
&lt;p>ここ最近しつこく「管理者権限が欲しいなァ〜(ﾁﾗｯ」としていたらめでたく権限を付与してもらえたので、
ここぞとばかりにJIRAをカスタムして使いやすいようにしていた。&lt;/p>
&lt;p>ワークフローを単純にしたり、使わないフィールドを非表示にしたり、
これまで説明文用のテンプレからコピペしたりしていたのを、それぞれ専用のフィールドを設けたり。&lt;/p>
&lt;p>色々準備はしたもの、やはり始まってみると色々不便なところが出てきて、
しかもJIRAの設定じゃどうしようもない部分もあったりする。&lt;/p>
&lt;p>たかがツール、されどツールで、ツールに使われているようじゃ到底円滑にスプリントを回すことなんて出来ない。&lt;/p>
&lt;p>そこで、スクラムマスターがセレモニーを進めやすいように支援するためのuserscriptを書いた。
ソースは&lt;a href="https://github.com/yewton/userscripts">yewton/userscripts&lt;/a>。&lt;/p>
&lt;h3 id="component-labels-for-jira-scrum">Component-labels for JIRA Scrum&lt;/h3>
&lt;p>コンポーネントをエピックのようにスクラムボード上で分かりやすいく表示する。&lt;/p>
&lt;p>ラベリングをしたいが為だけにエピックを使ってしまうという事態は結構そこかしこで起こっているみたいだった。
本来はコンポーネントでやるべきもので、エピックはエピックとして使えるのが健全な状態だと思うので、作った。&lt;/p>
&lt;p>実装は滅茶苦茶単純で、DOMに変更がある度に全課題を舐めて、未設定だったらAPIで該当する課題のコンポーネントを取得している。
なので、バックログに積まれている課題数分、ページを開いた瞬間にリクエストが走ることになる。
リクエストの仕方を何か工夫しないと使いものにならないかなーと思っていたのだけれど、
案外数百リクエスト飛ばすぐらいだとビクともしなかったので、愚直な実装のまま。&lt;/p>
&lt;h3 id="detail-pop-up-for-jria-scrum">Detail Pop-up for JRIA Scrum&lt;/h3>
&lt;p>各課題に詳細画面をポップアップで開くためのボタンを追加する。&lt;/p>
&lt;p>アジャイルボードではカスタムフィールドが表示されないので、
確認するためには編集ポップアップを開くか、詳細画面に飛ぶしかなかった。
しかも、アクティブなスプリント中はクローズされている課題が編集出来ないので、
前者の方法はスプリントレビュー時には使えない。&lt;/p>
&lt;p>画面遷移せずに詳細画面が開ければ用は足りると考え、
&lt;a href="http://www.ericmmartin.com/projects/simplemodal/">SimpleModal&lt;/a>という、
その名の通りシンプルなモーダル機能を実装するためのライブラリを使って、
&lt;code>iframe&lt;/code> で詳細画面を開くだけの機能を追加した。&lt;/p>
&lt;h2 id="3----connpasshttpddd-allianceconnpasscomevent24672">&lt;a href="http://ddd-alliance.connpass.com/event/24672/">第3回 実践的ドメイン駆動設計ワークショップ - connpass&lt;/a>&lt;/h2>
&lt;p>参加してきた。&lt;/p>
&lt;p>エンジニアチームとして、業務と技術両面でどういう風に学んでいけばいいかっていう話と、
実際にやってみたら、コードの雰囲気はこんな感じだぜ、っていう話。&lt;/p>
&lt;p>ドメイン層のクラスが1,000個とかあって、個々のクラスは 30 〜 60 行が大半を占めるそう。
目指すべき方向はそこだっていうのはわかってはいるけど、
実際に稼動してるプロダクトの数字っていうのは説得力がある。&lt;/p>
&lt;p>ドメイン駆動設計を実践するなら、ドメインエキスパートとか、企画者との協調が必須だと思うのだけれど、
それをどうプロセスとして制御可能な形で行えばいいか、あまり掴めてない。&lt;/p>
&lt;p>会話を重視しつつ、かつダラダラやらずに予測可能な状態で、
モデルに関する会話をする場を、開発プロセスのどこで行えばいいんだろう。&lt;/p>
&lt;p>増田さんに上手いやり方無いっすか、と相談してみたけれど、
いい方法っていうのはなくて、エンジニアチームが実績を積み重ねて信頼を得ていって、
協力体制を築くしかないね、ということだった。
それでも駄目なら、職場を変えよ、とも。&lt;/p>
&lt;p>色々仰々しいプロセスやツールを導入せずとも、
いつか阿吽の呼吸で、エンジニアチームと企画陣が協調して最高の仕事が出来るようになったときが、
アジャイルでドメイン駆動な状態なんだろう、たぶん。適当。&lt;/p></description></item></channel></rss>